package rebase

import (
	"bytes"
	"testing"
)

func TestRebase_Encode(t *testing.T) {
	for base, pair := range pairs {
		r := New(base)
		got, err := r.Encode(pair.decoded)
		if err != nil {
			t.Fatal(err)
		}
		if !bytes.Equal(got, pair.encoded) {
			t.Errorf("Encode(%d) = %q, want %q", pair.decoded, got, pair.encoded)
		}
	}
}

func TestRebase_Decode(t *testing.T) {
	for base, pair := range pairs {
		r := New(base)
		got, err := r.Decode(pair.encoded)
		if err != nil {
			t.Fatal(err)
		}
		if got != pair.decoded {
			t.Errorf("Decode(%q) = %d, want %d", pair.encoded, got, pair.decoded)
		}
	}
}

var pairs = map[int]struct {
	encoded []byte
	decoded int
}{
	2:  {[]byte("111101100110010110100010111010111011000110001011111010001011001"), 8877388119578899545},
	3:  {[]byte("1002201221001120112101200020210220211010"), 4463525865301478013},
	4:  {[]byte("11230310002330031022111202023300"), 6571890689634083568},
	5:  {[]byte("320130310113214430432421314"), 5085774489728404584},
	6:  {[]byte("1211135403503221354333322"), 6477461992762061522},
	7:  {[]byte("206532552321522333620"), 170631270478391786},
	8:  {[]byte("727103766770353564240"), 8487173615780817056},
	9:  {[]byte("88541251732736012"), 16596205323334481},
	10: {[]byte("5836475510742011381"), 5836475510742011381},
	11: {[]byte("16432519016a0746318"), 8789867971751995037},
	12: {[]byte("370b2a96a684540aa9"), 7964456496068986401},
	13: {[]byte("9cc448343c270140c"), 6651548204702013313},
	14: {[]byte("2c42c621b0c635325"), 6269464518998498165},
	15: {[]byte("239b2dd74cb6676b"), 982334838669428801},
	16: {[]byte("6d4b8c9bf1e1f23a"), 7875542974793380410},
	17: {[]byte("c7g43146352g4gb"), 2099331205338458142},
	18: {[]byte("de0a01706g4b98h"), 5164738246521049949},
	19: {[]byte("303gg5gige41e2"), 126611781334814144},
	20: {[]byte("53b45bce9jfcca9"), 8483692357759301009},
	21: {[]byte("109ajabaahc5bad"), 3313950450660276748},
	22: {[]byte("11ee6dg7ah5e53c"), 6692957775099146178},
	23: {[]byte("30l2ikaciid69e"), 1532234966661371884},
	24: {[]byte("99g3d6an2amjli"), 8241650335775879370},
	25: {[]byte("12274ld2029dan"), 1614779895508742773},
	26: {[]byte("2ppo1llnkbbnbi"), 7443186276307878036},
	27: {[]byte("1ok85hh9h2111f"), 7767697851382171542},
	28: {[]byte("10cj7hekqaarj7"), 6607341945493131339},
	29: {[]byte("af5ae7qlo5qhq"), 3723411226278712706},
	30: {[]byte("5qapttel44of1"), 3124203846849670051},
	31: {[]byte("8roogetir7u9l"), 7007650834042024664},
	32: {[]byte("2kuqvtt6m2hga"), 3061145853128427018},
	33: {[]byte("1ffv9jpupblji"), 2450447054373123087},
	34: {[]byte("axsrd55ajtm4"), 771761885266085116},
	35: {[]byte("2fuutkvj4ylpw"), 8291865915638511882},
	36: {[]byte("w87b7pfyxijc"), 4241886346313083416},
	37: {[]byte("U2ZQOHH1LXFQ"), 5351788130651508775},
	38: {[]byte("YGHXWPQN6RH9"), 8214856986711129691},
	39: {[]byte("SE8SSAO9JU4R"), 9005112693213473487},
	40: {[]byte("C88OcaFOcHab"), 5119311693375900677},
	41: {[]byte("5a3JL2cZ05Qb"), 3235998856970670587},
	42: {[]byte("2e1J8XCWDOdb"), 2118537235981421299},
	43: {[]byte("5EMLfXKT5Id7"), 4960343295618315782},
	44: {[]byte("642chZ1MSS8E"), 7290676790839462958},
	45: {[]byte("WFf2TeTEEEi"), 1101660750741644774},
	46: {[]byte("3W0FWJaPI6Fa"), 7211841919960537902},
	47: {[]byte("2ZCeadCM5fCU"), 6799688737247617808},
	48: {[]byte("26GbJ9P15j8f"), 6645051926566864553},
	49: {[]byte("28d09IClRNiC"), 8521494714680087425},
	50: {[]byte("1PLfYD3T7IAl"), 7366862704244670547},
	51: {[]byte("1JeN0bMCSoaN"), 8427389596319880041},
	52: {[]byte("LdI7fiCbQlo"), 3145043853424462494},
	53: {[]byte("7dbICF58dnQ"), 1355228098270633491},
	54: {[]byte("RHJk7c2o1Y2"), 5760286739524819298},
	55: {[]byte("YcX3ie6cdHs"), 8789808467639188714},
	56: {[]byte("6qKQHrsaqtc"), 2103453550600773934},
	57: {[]byte("1JYFEK91hmP"), 486529515692828557},
	58: {[]byte("1Y1feEbGr4i"), 683564726838628248},
	59: {[]byte("JRZDvth8i5"), 168649034944668150},
	60: {[]byte("8thBZR9Vc8W"), 5398822155838673312},
	61: {[]byte("bdn1QnF764"), 440314059202477733},
	62: {[]byte("6sqx2kOxGEV"), 5778360485571791275},
}
